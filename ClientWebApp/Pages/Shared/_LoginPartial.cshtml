@using Microsoft.AspNetCore.Identity
@*@inject SignInManager<IdentityUser> SignInManager
	@inject UserManager<IdentityUser> UserManager
*@
<ul class="navbar-nav">
	@*@if (SignInManager.IsSignedIn(User))*@
	@if (Context.User.Identity?.IsAuthenticated == true)
	{
		<li class="nav-item">
			<a class="nav-link text-dark" asp-area="Identity" asp-page="/Account/Manage/Index" title="Manage">Hello @User.Identity?.Name!</a>
		</li>
		@*<li class="nav-item">
			<form class="form-inline" asp-area="Identity" asp-page="/Account/Logout" asp-route-returnUrl="@Url.Action("Index", "Home", new { area = "" })">
			<button type="submit" class="nav-link btn btn-link text-dark">Logout</button>
			</form>
			</li>*@

		<li class="nav-item">@Html.ActionLink("Logout", "Logout", "Account", routeValues: null, htmlAttributes: new { id = "LogoutLink" })</li>

	}
	else
	{
		@*<li class="nav-item">
			<a class="nav-link text-dark" asp-area="Identity" asp-page="/Account/Register">Register</a>
			</li>*@
		@*<li class="nav-item">
			<a class="nav-link text-dark" asp-area="Identity" asp-page="/Account/Login">Login</a>
			</li>*@

		<li class="nav-item">@Html.ActionLink("Sign up / Sign in", "SignUpSignIn", "Account", routeValues: null, htmlAttributes: new { id = "signUpSignInLink" })</li>
	}
</ul>
